#voluationParam=		this.#{param} = #{param};\n
#mapType=	Map<#{entity1}, #{entity2}> #{param}
#listType= List<#{entity}> #{param}
#declareParams=    /* #{info} */\n    private #{type} #{param};\n 
#importPackage=import #{package};\n
#rowData=			/*#{info}*/\n			write#{type}(buffer, #{classJavaName}.get#{paramName}());
#baseTypeListData=		writeShort(buffer, #{paramName}.size());\n			for(#{entityName} #{paramName}Ele : #{paramName}) {\n#{writeDetail}\n			};\n
#baseData=			/*#{info}*/\n			write#{type}(buffer, #{parentName}Ele.get#{paramName}()); 
#innerBaseTypeListData=			writeShort(buffer, #{parentName}Ele.get#{UpperParamName}().size());\n			for(#{entityName} #{paramName}Ele : #{parentName}Ele.get#{UpperParamName}()) {\n#{writeDetail}\n			};\n
#baseTypeData=				/*#{info}*/\n				write#{type}(buffer, #{parentName}Ele); 
#listData=		writeShort(buffer, #{paramName}.size());\n		for(#{entityName} #{paramName}Ele : #{paramName}) {\n#{writeDetail}\n		};\n
#innerListData=			writeShort(buffer, #{parentName}Ele.get#{UpperParamName}().size());\n			for(#{entityName} #{paramName}Ele : #{parentName}Ele.get#{UpperParamName}()) {\n#{writeDetail}\n			};\n
#--map类型
#baseTypeMapData=		writeShort(buffer, #{paramName}.size());\n			for(Map<#{entityName1}, #{entityName2}> #{paramName}Ele : #{paramName}.entrySet()) {\n#{writeDetail}\n			};\n
#baseRowMapData=			/*#{info}*/\n			write#{type}(buffer, #{parentName}Ele.get#{KV}().get#{paramName}()); 
#innerBaseTypeMapData=			writeShort(buffer, #{parentName}Ele.get#{UpperParamName}().size());\n			for(Entry<#{entityName1}, #{entityName2}> #{paramName}Ele : #{parentName}Ele.get#{UpperParamName}().entrySet()) {\n#{writeDetail}\n			};\n
#baseTypeRowMapData=				/*#{info}*/\n				write#{type}(buffer, #{parentName}Ele.get#{KV}()); 
#mapData=		writeShort(buffer, #{paramName}.size());\n		for(Entry<#{entityName1}, #{entityName2}> #{paramName}Ele : #{paramName}.entrySet()) {\n#{writeDetail}\n		};\n
#innerMapData=			writeShort(buffer, #{parentName}Ele.get#{UpperParamName}().size());\n			for(Entry<#{entityName1}, #{entityName2}> #{paramName}Ele : #{parentName}Ele.get#{UpperParamName}().entrySet()) {\n#{writeDetail}\n			};\n
#--Array类型
#baseTypeArrayData=		writeShort(buffer, #{paramName}.length);\n			for (int #{loopName} = 0; #{loopName} < #{paramName}.length; #{loopName}++) {\n#{writeDetail}\n			});\n
#baseRowArrayData=			/*#{info}*/\n			write#{type}(buffer, #{parentName}[#{loopName}].get#{paramName}()); 
#innerBaseTypeArrayData=			writeShort(buffer, #{parentName}[#{parentLoopName}].get#{UpperParamName}().length);\n			for (int #{loopName} = 0; #{loopName} < #{parentName}[#{parentLoopName}].get#{UpperParamName}().length; #{loopName}++)) {\n#{writeDetail}\n			};\n
#baseTypeRowArrayData=				/*#{info}*/\n				write#{type}(buffer, #{parentName}[#{loopName}]); 
#arrayData=		writeShort(buffer, #{paramName}.length);\n		for (int #{loopName} = 0; #{loopName} < #{paramName}.length; #{loopName}++) {\n#{writeDetail}\n		};\n
#innerArrayData=			#{entityName}[] #{paramName};\n			writeShort(buffer, #{parentName}[#{parentLoopName}].get#{UpperParamName}().length);\n			for (int #{loopName} = 0; #{loopName} < #{parentName}[#{parentLoopName}].get#{UpperParamName}().length; #{loopName}++)) {\n			#{paramName} = #{parentName}[#{parentLoopName}].get#{UpperParamName}();\n#{writeDetail}\n			};\n
<-->
package #{packageName};

import org.jboss.netty.buffer.ChannelBuffer;

import com.darren.game.server.gameserver.module.player.entity.PlayerEntity;
import com.wing.gameserver.core.network.gs.GameClient;
import com.wing.gameserver.core.network.gs.GsServerPacket;
#{packages}

/**
 * #{info}
 * @cerateDate #{date}
 * @author Tool General
 */
public class #{className} extends GsServerPacket
{
#{declareParams}
		
	public #{className}(#{functionParam})
	{
		super();
#{voluationParam}
	}
	
	@Override
	protected void writeImpl(GameClient client, ChannelBuffer buffer) 
	{
#{writeParams}
	}
}