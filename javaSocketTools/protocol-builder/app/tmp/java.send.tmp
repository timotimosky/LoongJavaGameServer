#writeData=			/*#{info}*/\n			write#{type}(buffer, #{classJavaName}.get#{paramName}());
#ilistData=			writeShort(buffer, #{classJavaName}.get#{ListName}().size());\n			#{classJavaName}.get#{ListName}().forEach(#{listName} -> {\n#{writeDetail}\n			});\n
#writeBaseData=			/*#{info}*/\n			write#{type}(buffer, #{listName});
#importPackage=import #{package};\n
<-->
package com.darren.game.server.network.resolve.sendable.#{listName};

import java.util.List;

import org.jboss.netty.buffer.ChannelBuffer;

import com.commons.network.resolve.SendableBuffer;
#{packages}


public class #{name} extends SendableBuffer 
{
	@Override
	@SuppressWarnings("unchecked")
	public void write(ChannelBuffer buffer, Object obj)
	{
		List<#{className}> #{classJavaName}s = (List<#{className}>) obj;
		final int length = #{classJavaName}s.size();
		writeShort(buffer, length);
		for (#{className} #{classJavaName} : #{classJavaName}s)
		{
#{writeDetail}
		}

	}

}